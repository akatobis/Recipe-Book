// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recipe_Backend.Infrastructure;

#nullable disable

namespace Recipe_Backend.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    [Migration("20220604133835_001--add-table-Recipe")]
    partial class _001addtableRecipe
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"), 1L, 1);

                    b.Property<int>("CookingTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Portions")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("RecipeId");

                    b.ToTable("recipe", (string)null);
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.RecipeFavourite", b =>
                {
                    b.Property<int>("RecipeFavouriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeFavouriteId"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("RecipeFavouriteId");

                    b.HasIndex("RecipeId");

                    b.ToTable("recipe_favourite", (string)null);
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.RecipeIngredientsBlock", b =>
                {
                    b.Property<int>("RecipePartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipePartId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("RecipeIngredients")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("RecipePartId");

                    b.HasIndex("RecipeId");

                    b.ToTable("recipe_part", (string)null);
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.RecipeLike", b =>
                {
                    b.Property<int>("RecipeLikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeLikeId"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("RecipeLikeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("recipe_like", (string)null);
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.RecipeStep", b =>
                {
                    b.Property<int>("RecipeStepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeStepId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("RecipeStepId");

                    b.HasIndex("RecipeId");

                    b.ToTable("recipe_step", (string)null);
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.RecipeTag", b =>
                {
                    b.Property<int>("RecipeTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeTagId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("RecipeTagId");

                    b.HasIndex("RecipeId");

                    b.ToTable("recipe_tag", (string)null);
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.RecipeFavourite", b =>
                {
                    b.HasOne("Recipe_Backend.Aplication.Models.Recipe", null)
                        .WithMany("RecipeFavourites")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.RecipeIngredientsBlock", b =>
                {
                    b.HasOne("Recipe_Backend.Aplication.Models.Recipe", null)
                        .WithMany("RecipeIngredientsBlocks")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.RecipeLike", b =>
                {
                    b.HasOne("Recipe_Backend.Aplication.Models.Recipe", null)
                        .WithMany("RecipeLikes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.RecipeStep", b =>
                {
                    b.HasOne("Recipe_Backend.Aplication.Models.Recipe", null)
                        .WithMany("RecipeSteps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.RecipeTag", b =>
                {
                    b.HasOne("Recipe_Backend.Aplication.Models.Recipe", null)
                        .WithMany("RecipeTags")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Recipe_Backend.Aplication.Models.Recipe", b =>
                {
                    b.Navigation("RecipeFavourites");

                    b.Navigation("RecipeIngredientsBlocks");

                    b.Navigation("RecipeLikes");

                    b.Navigation("RecipeSteps");

                    b.Navigation("RecipeTags");
                });
#pragma warning restore 612, 618
        }
    }
}
